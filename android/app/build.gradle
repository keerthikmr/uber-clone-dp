plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def envProperties = new Properties()
def envPropertiesFile = rootProject.file('../.env')
if (envPropertiesFile.exists()) {
    envPropertiesFile.withReader('UTF-8') { reader ->
        envProperties.load(reader)
    }
}

android {
    namespace "com.uberclone.uber_clone"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        
        manifestPlaceholders["GOOGLE_MAPS_API_KEY"] = "${GOOGLE_MAPS_API_KEY}"
        
        applicationId "com.uberclone.uber_clone"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters 'x86_64', 'arm64-v8a', 'armeabi-v7a'
        }
        manifestPlaceholders = [
            GOOGLE_MAPS_API_KEY: envProperties.getProperty('GOOGLE_MAPS_API_KEY', ''),
            applicationName: "android.app.Application"
        ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86_64', 'arm64-v8a', 'armeabi-v7a'
            universalApk true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:32.7.4')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-location:21.1.0'
}
